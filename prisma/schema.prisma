generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model transactions {
  id        Int              @id @default(autoincrement())
  userId    Int              @map("user_id")
  type      transaction_type
  amount    Decimal          @db.Decimal(10, 2)
  isDeleted Boolean?         @default(false) @map("is_deleted")
  createdAt DateTime?        @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime?        @default(now()) @map("updated_at") @db.Timestamp(6)
  user      users            @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id           Int            @id @default(autoincrement())
  username     String         @unique @db.VarChar(255)
  passwordHash String         @map("password_hash") @db.VarChar(255)
  isDeleted    Boolean?       @default(false) @map("is_deleted")
  createdAt    DateTime?      @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt    DateTime?      @default(now()) @map("updated_at") @db.Timestamp(6)
  transactions transactions[]
  wallet       wallets?
}

model wallets {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique @map("user_id")
  balance   Decimal?  @default(0) @db.Decimal(10, 2)
  isDeleted Boolean?  @default(false) @map("is_deleted")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)
  user      users     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum transaction_type {
  deposit
  withdraw
  payment
}
